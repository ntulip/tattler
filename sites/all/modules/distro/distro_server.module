<?php
// $Id: distro_server.module,v 1.1.2.1 2009/10/13 15:35:31 inadarei Exp $
/**
 * @file
 * Distro Server
 *
 */

/**
* hook_menu implementation. Callback for REST JSON calls.
*/
function distro_server_menu() {
 $items = array();

  $items['distro/components'] = array(
    'title' => 'Distribution Check',
    'page callback' => 'distro_server_check',
    'access callback' => 'distro_server_access_check',    
    'type' => MENU_CALLBACK,
  );

  return $items;
}

function distro_server_check() {
  
  $remote = $_POST['info'];
  $remote = json_decode($remote);
  
  //-- domain can be empty if client runs cron via drush on default. 
  if (empty($remote->domain) || trim($remote->domain) == 'http://default') {
    $remote->domain = $_SERVER['REMOTE_ADDR'];
  }
    
  $ret = distro_server_get_state($remote);  
  
  // We are returning JavaScript, so tell the browser.
  //drupal_set_header('Content-Type: text/javascript; charset=utf-8');
  $encoded = json_encode($ret);
  echo $encoded;
  exit();
}

/**
* Checks access permission to the distro server. 
*/
function distro_server_access_check(){
  return TRUE;
}


/**
* Returns list of required and 
*/
function distro_server_get_state($remote) {

  $all_distros = module_invoke_all('distros');
  
  $distro_prjs = $all_distros[$remote->profile];
  $client_prjs = $remote->projects;
  
  $ret = new stdClass();
  
  if (is_array($distro_prjs) && is_array($client_prjs)) {
    $ret->missing = array_diff($distro_prjs, $client_prjs);
    $ret->extra = array_diff($client_prjs, $distro_prjs);    
  }
  
  $mods = module_implements('distro_pre_response');
  if (is_array($mods)) {
    foreach ($mods as $m) {
      $function = $m .'_distro_pre_response';
      $function($ret, $remote);
    }
  }

  return $ret;
}